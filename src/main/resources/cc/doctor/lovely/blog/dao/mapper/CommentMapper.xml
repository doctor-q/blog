<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.doctor.lovely.blog.dao.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="cc.doctor.lovely.blog.dao.model.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="comment_type" jdbcType="TINYINT" property="commentType" />
    <result column="source_id" jdbcType="INTEGER" property="sourceId" />
    <result column="comment_ref_id" jdbcType="INTEGER" property="commentRefId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, comment, comment_type, source_id, comment_ref_id, user_id, username, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cc.doctor.lovely.blog.dao.model.Comment">
    insert into comment (id, comment, comment_type, 
      source_id, comment_ref_id, user_id, username,
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{commentType,jdbcType=TINYINT}, 
      #{sourceId,jdbcType=INTEGER}, #{commentRefId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cc.doctor.lovely.blog.dao.model.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="commentType != null">
        comment_type,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="commentRefId != null">
        comment_ref_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentType != null">
        #{commentType,jdbcType=TINYINT},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="commentRefId != null">
        #{commentRefId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cc.doctor.lovely.blog.dao.model.Comment">
    update comment
    <set>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentType != null">
        comment_type = #{commentType,jdbcType=TINYINT},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="commentRefId != null">
        comment_ref_id = #{commentRefId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.doctor.lovely.blog.dao.model.Comment">
    update comment
    set comment = #{comment,jdbcType=VARCHAR},
      comment_type = #{commentType,jdbcType=TINYINT},
      source_id = #{sourceId,jdbcType=INTEGER},
      comment_ref_id = #{commentRefId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectRefComment" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where source_id = #{sourceId,jdbcType=INTEGER} AND comment_ref_id=#{commentRefId}
  </select>
</mapper>