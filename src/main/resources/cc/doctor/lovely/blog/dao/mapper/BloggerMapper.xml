<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.doctor.lovely.blog.dao.mapper.BloggerMapper">
  <resultMap id="BaseResultMap" type="cc.doctor.lovely.blog.dao.model.Blogger">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="header" jdbcType="VARCHAR" property="header" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="marriage_status" jdbcType="TINYINT" property="marriageStatus" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="github" jdbcType="VARCHAR" property="github" />
    <result column="weibo" jdbcType="VARCHAR" property="weibo" />
    <result column="facebook" jdbcType="VARCHAR" property="facebook" />
    <result column="twitter" jdbcType="VARCHAR" property="twitter" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, username, header, gender, birthday, address, company, position, marriage_status, 
    mobile, email, qq, github, weibo, facebook, twitter, is_deleted, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blogger
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blogger
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cc.doctor.lovely.blog.dao.model.Blogger">
    insert into blogger (id, user_id, username, 
      header, gender, birthday, 
      address, company, position, 
      marriage_status, mobile, email, 
      qq, github, weibo, 
      facebook, twitter, is_deleted, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{header,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, #{birthday,jdbcType=DATE}, 
      #{address,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{marriageStatus,jdbcType=TINYINT}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{github,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}, 
      #{facebook,jdbcType=VARCHAR}, #{twitter,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cc.doctor.lovely.blog.dao.model.Blogger">
    insert into blogger
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="header != null">
        header,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="marriageStatus != null">
        marriage_status,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="github != null">
        github,
      </if>
      <if test="weibo != null">
        weibo,
      </if>
      <if test="facebook != null">
        facebook,
      </if>
      <if test="twitter != null">
        twitter,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="header != null">
        #{header,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="marriageStatus != null">
        #{marriageStatus,jdbcType=TINYINT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="github != null">
        #{github,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="facebook != null">
        #{facebook,jdbcType=VARCHAR},
      </if>
      <if test="twitter != null">
        #{twitter,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cc.doctor.lovely.blog.dao.model.Blogger">
    update blogger
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="header != null">
        header = #{header,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="marriageStatus != null">
        marriage_status = #{marriageStatus,jdbcType=TINYINT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="github != null">
        github = #{github,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="facebook != null">
        facebook = #{facebook,jdbcType=VARCHAR},
      </if>
      <if test="twitter != null">
        twitter = #{twitter,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.doctor.lovely.blog.dao.model.Blogger">
    update blogger
    set user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      header = #{header,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      address = #{address,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      marriage_status = #{marriageStatus,jdbcType=TINYINT},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      github = #{github,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      facebook = #{facebook,jdbcType=VARCHAR},
      twitter = #{twitter,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from blogger
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
</mapper>