<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.doctor.lovely.blog.dao.mapper.AttentionMapper">
  <resultMap id="BaseResultMap" type="cc.doctor.lovely.blog.dao.model.Attention">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="blogger_id" jdbcType="INTEGER" property="bloggerId" />
    <result column="blogger" jdbcType="VARCHAR" property="blogger" />
    <result column="follower_id" jdbcType="INTEGER" property="followerId" />
    <result column="follower" jdbcType="VARCHAR" property="follower" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, blogger_id, blogger, follower_id, follower, is_deleted, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from attention
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attention
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cc.doctor.lovely.blog.dao.model.Attention">
    insert into attention (id, blogger_id, blogger, 
      follower_id, follower, is_deleted, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{bloggerId,jdbcType=INTEGER}, #{blogger,jdbcType=VARCHAR}, 
      #{followerId,jdbcType=INTEGER}, #{follower,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cc.doctor.lovely.blog.dao.model.Attention">
    insert into attention
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bloggerId != null">
        blogger_id,
      </if>
      <if test="blogger != null">
        blogger,
      </if>
      <if test="followerId != null">
        follower_id,
      </if>
      <if test="follower != null">
        follower,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bloggerId != null">
        #{bloggerId,jdbcType=INTEGER},
      </if>
      <if test="blogger != null">
        #{blogger,jdbcType=VARCHAR},
      </if>
      <if test="followerId != null">
        #{followerId,jdbcType=INTEGER},
      </if>
      <if test="follower != null">
        #{follower,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cc.doctor.lovely.blog.dao.model.Attention">
    update attention
    <set>
      <if test="bloggerId != null">
        blogger_id = #{bloggerId,jdbcType=INTEGER},
      </if>
      <if test="blogger != null">
        blogger = #{blogger,jdbcType=VARCHAR},
      </if>
      <if test="followerId != null">
        follower_id = #{followerId,jdbcType=INTEGER},
      </if>
      <if test="follower != null">
        follower = #{follower,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.doctor.lovely.blog.dao.model.Attention">
    update attention
    set blogger_id = #{bloggerId,jdbcType=INTEGER},
      blogger = #{blogger,jdbcType=VARCHAR},
      follower_id = #{followerId,jdbcType=INTEGER},
      follower = #{follower,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectFollowerCount" resultType="int">
    SELECT count(1) FROM attention WHERE blogger_id=#{bloggerId}
  </select>
  <select id="selectAttentionCount" resultType="int">
    SELECT count(1) FROM attention WHERE follower_id=#{followerId}
  </select>
  <select id="selectFollowers" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from attention
    WHERE blogger_id=#{bloggerId}
  </select>
  <select id="selectAttentions" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from attention
    WHERE follower_id=#{followerId}
  </select>
</mapper>